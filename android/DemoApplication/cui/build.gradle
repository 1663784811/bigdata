plugins {
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

def isLibraryMode = project.hasProperty('LIBRARY_MODE') && project.LIBRARY_MODE.toBoolean()
if (isLibraryMode) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}


android {
    namespace 'com.cyyaw.cui'
    compileSdk 34

    defaultConfig {
        minSdk 28

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/cpp/libyuv/libs']
            if (isLibraryMode) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java.srcDirs = ['src/main/java']
                res.srcDirs = ['src/main/res', 'src/app/res']
            } else {
                manifest.srcFile 'src/app/AndroidManifest.xml'
                java.srcDirs = ['src/main/java', 'src/app/java']
                res.srcDirs = ['src/main/res', 'src/app/res']
            }
        }
    }


}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}


task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = "sources"
}


publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.cyyaw'
            artifactId = 'cui'
            version = '0.01'

            // 上传 AAR 包
            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
            // 向 Maven 仓库中上传源码
            artifact sourceJar
        }
    }
}







